{"version":3,"sources":["redux/services/config.js","redux/services/userService.js","helpers/validations.js","helpers/constants.js","redux/slices/UserSlice.js","pages/Login.js","assets/left-arrow.svg","pages/Register.js","components/Task.js","components/Modal.js","pages/ToDoList.js","helpers/parseDate.js","components/ProtectedRoute.js","pages/NotFound.js","assets/door.svg","assets/arrow.svg","App.js","redux/store.js","index.js"],"names":["axios","create","baseURL","timeout","userLogin","createAsyncThunk","thunkAPI","a","identifier","password","post","response","data","user","token","jwt","email","login","username","isLogged","status","localStorage","setItem","JSON","stringify","rejectWithValue","console","log","userRegister","fetchUserToDoLists","foundUserToken","get","headers","Authorization","loginSchema","yup","shape","required","registerSchema","matches","rePassword","oneOf","SORT","userSlice","createSlice","name","initialState","isLoading","isError","errorMsg","todoLists","filteredTodoLists","reducers","clearState","state","cleanWholeState","sortToDoListsBy","payload","sort","b","toLowerCase","task","filter","isDone","length","created_at","searchToDoList","search","setPreviouslyLoggedUser","extraReducers","fulfilled","pending","rejected","message","messages","reducer","actions","Login","history","useHistory","dispatch","useDispatch","useSelector","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","useEffect","setTimeout","push","className","onSubmit","placeholder","type","to","Register","src","leftArrowIcon","alt","Task","onChange","remove","disabled","data-testid","checked","value","onClick","Modal","setIsModal","chosenToDoIdx","useState","toDoListName","setToDoListName","tasks","setTasks","setMessage","newTask","setTask","handleMessage","hadleToDoSave","Boolean","match","loggedInUser","getItem","parse","e","target","map","idx","newTasks","handleExistingTaskState","_","i","handleTaskRemove","prev","ToDoList","isModal","setChosenToDoIdx","todo","allTasks","doneTasks","date","result","substr","split","parseDate","handleExistingTodoClick","id","ProtectedRoute","children","rest","render","location","pathname","from","NotFound","App","basename","process","exact","path","component","clear","doorIcon","rightArrowIcon","store","configureStore","userReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0f4f8510.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://recruitment.ultimate.systems/',\n    timeout: 1000,\n  });","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"./config\"\n\n\nexport const userLogin = createAsyncThunk(\n    \"user/login\",\n\n    async ({ identifier, password }, thunkAPI) => {\n\n\n        try {\n\n            const response = await axios.post(\"auth/local\", { identifier, password });\n\n            const data = response.data\n\n            const user = {\n                token: data.jwt,\n                email: data.user.email,\n                login: data.user.username,\n                isLogged:true\n            }\n\n            if (response.status === 200) {\n                localStorage.setItem('user', JSON.stringify(user));\n                return { ...data };\n            } else {\n                return thunkAPI.rejectWithValue(...data);\n            }\n\n        }catch(e){\n            console.log('Error', e.response.data);\n            return thunkAPI.rejectWithValue(e.response.data);\n        }\n        \n    }\n\n)\n\nexport const userRegister = createAsyncThunk(\n    \"user/register\",\n\n    async ({ username, email, password }, thunkAPI) => {\n\n\n        try {\n\n            const response = await axios.post(\"auth/local/register\", { username, email, password });\n\n            const data = response.data\n\n            const user = {\n                token: data.jwt,\n                email: data.user.email,\n                login: data.user.username,\n                isLogged:true\n            }\n\n\n            if (response.status === 200) {\n                localStorage.setItem('user', JSON.stringify(user));\n                return { ...data };\n            } else {\n                console.log('Error', response.status);\n                console.log('Error', response.data);\n                return thunkAPI.rejectWithValue(...data);\n            }\n\n        }catch(e){\n            console.log('Error', e.response.data);\n            return thunkAPI.rejectWithValue(e.response.data);\n        }\n        \n    }\n\n)\n\nexport const fetchUserToDoLists = createAsyncThunk(\n    \"user/todos\",\n\n    async ({ foundUserToken }, thunkAPI) => {\n\n  \n        try {\n\n            const response = await axios.get(\"to-do-lists\",{\n                headers: {\n                    Authorization: \"Bearer \" + foundUserToken\n                }\n            });\n\n            const data = response.data\n            if (response.status === 200) {\n                return data;\n            } else {\n                console.log('Error', response.status);\n                console.log('Error', response.data);\n                return thunkAPI.rejectWithValue(...data);\n            }\n\n        }catch(e){\n            console.log('Error', e.response.data);\n            return thunkAPI.rejectWithValue(e.response.data);\n        }\n        \n    }\n\n)\n","import * as yup from \"yup\";\n\n\nexport const loginSchema = yup.object().shape({\n    identifier: yup.string().required(\"email or username is required\"),\n    password: yup.string().required(\"password is required\"),\n  });\n\n\nexport const registerSchema = yup.object().shape({\n  username: yup.string().required('username is required'),\n  email: yup.string().email().required('email is required'),\n  password: yup.string()\n          .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{8,})/,\n            'at least 8 characters, one uppercase and one special character')\n          .required(),\n  rePassword: yup.string().oneOf([yup.ref('password'), null], 'passwords must match')\n  .required('passwords must match'),\n});","export const SORT = {\n    ALPH:\"alph\",\n    BY_DONE:\"by-done\",\n    BY_UNDONE:\"by-undone\",\n    BY_DATE:\"by-date\",\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { userLogin, userRegister, fetchUserToDoLists } from \"../services\"\nimport { SORT } from \"../../helpers\"\n\n\nexport const userSlice = createSlice({\n\n    name:\"user\",\n\n    initialState: {\n        email: \"\",\n        login: \"\",\n        isLoading: false,\n        isLogged: false,\n        isError: false,\n        errorMsg: \"\",\n        todoLists: [],\n        filteredTodoLists: []\n    },\n\n    reducers: {\n\n        clearState: state => {\n\n            state.isLoading = false;\n            state.isError = false;\n            state.errorMsg = \"\";\n\n            return state;\n        },\n\n        cleanWholeState: state => {\n\n            state.email = \"\";\n            state.login = \"\";\n            state.isLoading = false;\n            state.isLogged = false;\n            state.isError = false;\n            state.errorMsg = \"\";\n            state.todoLists = [];\n            state.filteredTodoLists = [];\n        },\n\n        sortToDoListsBy: (state, {payload}) => {\n\n            switch(payload){\n                case SORT.ALPH:{\n                    state.filteredTodoLists.sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1)\n                    break\n                }\n                case SORT.BY_DONE:{\n                    state.filteredTodoLists.sort((a,b) => {\n\n                        const aDoneTasks = a.task.filter(task => task.isDone).length\n                        const bDoneTasks = b.task.filter(task => task.isDone).length\n\n                        return aDoneTasks > bDoneTasks ? -1 : 1\n                    })\n                    break\n                }\n                case SORT.BY_UNDONE:{\n                    state.filteredTodoLists.sort((a,b) => {\n\n                        const aUdoneTasks = a.task.filter(task => !task.isDone).length\n                        const bUnoneTasks = b.task.filter(task => !task.isDone).length\n\n                        return aUdoneTasks > bUnoneTasks ? -1 : 1\n                    })\n                    break\n                }\n\n                default:{\n                    state.filteredTodoLists.sort((a,b) => a.created_at < b.created_at ? 1 : -1)\n                    break\n                }\n\n            }\n        },\n\n        searchToDoList: (state, {payload}) => {\n            if(payload.length > 0)\n                state.filteredTodoLists = state.todoLists.filter( task => task.name.toLowerCase().search(payload) !== -1 && task )\n            else\n                state.filteredTodoLists = state.todoLists\n        },\n\n        setPreviouslyLoggedUser: (state, {payload} ) => {\n\n            state.email = payload.email;\n            state.login = payload.login;\n            state.isLogged = true;\n\n        }\n\n    },\n\n    extraReducers: {\n\n        [userLogin.fulfilled]: (state, {payload} ) => {\n            state.email = payload.user.email;\n            state.login = payload.user.username;\n            state.isLoading = false;\n            state.isLogged = true;\n            state.isError = false;\n        },\n\n        [userLogin.pending]: (state) => {\n            state.isLoading = true;\n        },\n\n        [userLogin.rejected]: (state, {payload} ) => {\n            state.isLoading = false;\n            state.isLogged = false;\n            state.isError = true;\n            state.errorMsg = payload.message[0].messages[0].message\n\n        },\n\n        [userRegister.fulfilled]: (state, {payload} ) => {\n            state.email = payload.user.email;\n            state.login = payload.user.username;\n            state.isLoading = false;\n            state.isLogged = true;\n            state.isError = false;\n        },\n\n        [userRegister.pending]: (state) => {\n            state.isLoading = true;\n        },\n\n        [userRegister.rejected]: (state, {payload} ) => {\n            state.isLoading = false;\n            state.isLogged = false;\n            state.isError = true;\n            state.errorMsg = payload.message[0].messages[0].message\n\n        },\n\n        [fetchUserToDoLists.fulfilled] : (state, {payload}) => {\n            state.isLoading = false;\n            state.todoLists = payload\n            state.filteredTodoLists = payload\n        },\n\n        [fetchUserToDoLists.pending] : (state) => {\n            state.isLoading = true;\n        },\n\n        [fetchUserToDoLists.rejected] : (state) => {\n            state.isLoading = false;\n        }\n\n    }\n\n})\n\n\nconst {reducer, actions} = userSlice;\nexport const { clearState, cleanWholeState, sortToDoListsBy, searchToDoList, setPreviouslyLoggedUser } = actions;\nexport default reducer;\n","import React, {useEffect} from 'react';\nimport {useHistory, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector} from 'react-redux';\nimport { clearState } from \"../redux/slices/UserSlice\"\nimport { userLogin } from \"../redux/services\"\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { loginSchema } from \"../helpers\"\n\n\nconst Login = () => {\n\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const { isLoading, isLogged, isError, errorMsg} = useSelector(state => state.user);\n\n    const { register, \n            handleSubmit, \n            reset, \n            formState:{ errors } } = useForm({resolver: yupResolver(loginSchema)});\n\n    \n  \n    const onSubmit = (data) => {\n        dispatch(userLogin(data));\n    }\n\n\n    useEffect(() => {\n        return () => {\n          dispatch(clearState());\n        };\n      }, []);\n\n\n    useEffect(() => {\n        reset()\n        if (isError) {\n            setTimeout(() => dispatch(clearState()), 3500)\n        }\n    \n        if (isLogged) {\n          dispatch(clearState());\n          history.push('/');\n        }\n      }, [isError, isLogged]);\n\n\n    return (\n        <div className=\"login-form-wrapper\">\n\n            <span className=\"login-header\">Login</span>\n\n            <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n                <input placeholder=\"Email or Username\" type=\"text\" {...register(\"identifier\")} />\n                <p className=\"form-error\">{errors.identifier?.message}</p>\n                    \n                <input placeholder=\"Password\" type=\"password\" {...register(\"password\")} />\n                <p className=\"form-error\">{errors.password?.message}</p>\n                \n                <button type=\"submit\" className=\"login-btn\">{isLoading ? 'Loading...' : \"Login\"} </button>\n            </form>\n\n            \n            <p>or</p>\n  \n            <Link to=\"/register\" className=\"register-link\"> create an account </Link>\n\n            {isError && <div> {errorMsg} </div>}\n        </div>\n\n    );\n}\n \nexport default Login;","export default __webpack_public_path__ + \"static/media/left-arrow.a7008190.svg\";","import React, {useEffect} from 'react';\nimport leftArrowIcon from \"../assets/left-arrow.svg\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { clearState } from \"../redux/slices/UserSlice\"\nimport { userRegister } from \"../redux/services\"\nimport { registerSchema } from \"../helpers\"\n\n\n\n\nconst Register = () => {\n\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const { isLoading, isLogged, isError, errorMsg} = useSelector(state => state.user);\n    \n    const { register, handleSubmit, reset, formState:{ errors } } = useForm({\n        resolver: yupResolver(registerSchema)\n      });\n\n    const onSubmit = (data) => {\n        const {username, email, password} = data;\n        dispatch(userRegister({username, email, password}));\n    }\n\n    useEffect(() => {\n        return () => {\n          dispatch(clearState());\n        };\n      }, []);\n\n\n    useEffect(() => {\n        reset();\n        \n        if (isError) {\n            setTimeout(() => dispatch(clearState()), 5000)\n        }\n    \n        if (isLogged) {\n          dispatch(clearState());\n          history.push('/');\n        }\n      }, [isError, isLogged]);\n\n\n    return (\n        <div className=\"login-form-wrapper\">\n\n            <Link to=\"/login\">\n              <img className=\"back-to-login\" src={leftArrowIcon} alt=\"left-arrow\" />\n            </Link>\n\n            <span className=\"login-header\">Create an new account</span>\n\n            <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\" >\n\n                <input placeholder=\"Username\" type=\"text\" {...register(\"username\")} />\n                <p className=\"form-error\" >{errors.username?.message}</p>\n\n                <input placeholder=\"Email\" {...register(\"email\")} />\n                <p className=\"form-error\">{errors.email?.message}</p>\n                    \n                <input placeholder=\"Password\" type=\"password\" {...register(\"password\")} />\n                <p className=\"form-error\" >{errors.password?.message}</p>\n\n                <input placeholder=\"Repeat Password\" type=\"password\" {...register(\"rePassword\")} />\n                <p className=\"form-error\" >{errors.rePassword?.message}</p>\n                \n                <button type=\"submit\" className=\"login-btn\">{isLoading ? 'Loading...' : \"Create\"}</button>\n                \n            </form>\n\n            {isError && <div> {errorMsg} </div>}\n\n\n        </div>\n\n    );\n}\n \nexport default Register;","import React from 'react';\nimport { ImBin } from 'react-icons/im';\n\n\nconst Task = ({task, onChange, remove, disabled}) => {\n\n    return (\n        <div>\n            <div className=\"new-task-content\">\n         \n                <label className=\"checkbox\">\n                    <input\n                        data-testid=\"task-checkbox\"\n                        type=\"checkbox\"\n                        checked={task.isDone}\n                        onChange={onChange}\n                        disabled={disabled}\n                    />\n                    <span/>\n                </label>\n\n                <input \n                    type=\"text\" \n                    placeholder=\"Task name\"\n                    value={task.name}\n                    disabled\n                />\n                {!disabled && <ImBin className=\"remove-btn\" onClick={remove} />}\n            </div>\n\n        </div>  \n    )\n\n}\n\n\nexport default Task","import React, {useState, useEffect} from 'react';\nimport \"../styles/Modal.scss\"\nimport Task from \"../components/Task\"\nimport axios from \"../redux/services/config\"\nimport { fetchUserToDoLists } from \"../redux/services\"\nimport {  useDispatch, useSelector } from \"react-redux\"\n\n\nconst Modal = ({setIsModal, chosenToDoIdx}) => {\n\n    const dispatch = useDispatch();\n    const {filteredTodoLists} = useSelector(state => state.user);\n\n    const [toDoListName, setToDoListName] = useState(\"\");\n    const [tasks, setTasks] = useState([]);\n\n    const [message, setMessage] = useState(\"\");\n    const [newTask, setTask]  = useState({name:\"\", isDone:false})\n    \n    // state variable used only for static blocking modal inputs/buttons\n    const [disabled, setDisabled] = useState(chosenToDoIdx !== -1 ? true : false)\n\n\n    useEffect(() => {\n\n        if(chosenToDoIdx !== -1){\n            const {name, task} = filteredTodoLists[chosenToDoIdx]\n            setToDoListName(name)\n            setTasks(task)\n        }\n\n    },[filteredTodoLists])\n\n\n    const handleTaskAddition = () => {\n        if(Boolean(newTask.name.match(/^(?!\\s*$).+/))){\n            setTask({name:\"\", isDone:false})\n            setTasks(prev => [...prev, newTask])\n        }\n    }\n\n    const handleTaskState = (e) => {\n        setTask(prev => ({...prev, isDone:e.target.checked}))\n    }\n\n    const handleTaskName = (e) => {\n        setTask(prev => ({...prev, name:e.target.value}))\n    }\n\n\n    const handleModalClose = () => {\n        setIsModal(false)\n    }\n\n    const handleMessage = (message) => {\n        setMessage(message)\n        setTimeout(()=>{\n            setMessage(\"\")\n        }, 3500)\n    }\n\n    const handleClear = () => {\n        setToDoListName(\"\")\n        setTasks([])\n    }\n\n    const hadleToDoSave = async () => {\n        if(Boolean(toDoListName.match(/^(?!\\s*$).+/))){\n\n            const loggedInUser = localStorage.getItem(\"user\");\n            const foundUserToken = JSON.parse(loggedInUser).token;\n\n            const data = {\n                name:toDoListName,\n                task:tasks\n            }\n\n            try{\n\n                await axios.post(\"to-do-lists\", data, {\n                    headers: {\n                        Authorization:\"Bearer \" + foundUserToken\n                    }\n                })\n\n            }catch(e){\n                console.log(\"Error \"+e.response.data)\n            }\n            \n            dispatch(fetchUserToDoLists({ foundUserToken }));\n            handleClear();\n            handleMessage(\"New todo list has been added\");\n\n        }else{\n            handleMessage(\"Please insert a new todo list name\");\n        }\n    }\n\n    const handleExistingTaskState = (idx) => {\n        \n        let newTasks = [...tasks]\n        newTasks[idx].isDone = !newTasks[idx].isDone\n        setTasks(newTasks)\n    }\n\n    const handleTaskRemove = (idx) => {\n        const newTasks = tasks.filter((_,i) => i !== idx)\n        setTasks(newTasks)\n    }\n\n    return(\n        <div className=\"modal-container\">\n            <div className=\"modal-content\">\n                <input \n                    className=\"new-todo-name\" \n                    type=\"text\" \n                    placeholder=\"List name\"\n                    value={toDoListName}\n                    onChange={(e) => setToDoListName(e.target.value)}\n                    disabled={disabled}\n                />\n\n                <div className=\"divider\"/>\n\n                <div className=\"todo-tasks\">\n                    <ul>\n                        {tasks.map((task,idx) => (\n                            <Task\n                                key={idx}\n                                task={task}\n                                onChange={() => handleExistingTaskState(idx)}\n                                remove={() => handleTaskRemove(idx)}\n                                disabled={disabled}\n                            />\n                        ))}\n                    </ul>\n\n                    { !disabled && <>\n                        <div className=\"new-task-content\">\n\n                            <label className=\"checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={newTask.isDone}\n                                    onChange={handleTaskState}\n                                />\n                                <span/>\n                            </label>\n\n                            <input \n                                type=\"text\" \n                                placeholder=\"Task name\"\n                                value={newTask.name}\n                                onChange={handleTaskName}\n                            />\n                        </div>\n\n                        <div className=\"add-new-task-menu\">\n                            <button \n                                className=\"cancel-new-todo\" \n                                onClick={() => setTask({name:\"\", isDone:false})}\n                            >Cancel</button>\n\n                            <button \n                                className=\"add-new-todo\" \n                                onClick={handleTaskAddition}\n                            >Add</button>\n                        </div>\n                    </> }\n                            \n                </div>\n\n                <div className=\"modal-footer\">\n                    <p className=\"modal-close\" onClick={handleModalClose} >Cancel</p>\n                    { Boolean(message) && <p className=\"modal-message\">{message}</p>}\n                    { !disabled && <button className=\"save-todo-btn\"onClick={hadleToDoSave}>Save</button> }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { useEffect, useState } from 'react';\nimport \"../styles/ToDo.scss\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { fetchUserToDoLists } from \"../redux/services\"\nimport Modal from \"../components/Modal\"\nimport { parseDate } from \"../helpers\"\nimport { sortToDoListsBy, searchToDoList } from \"../redux/slices/UserSlice\"\nimport { SORT } from \"../helpers\"\n\n\nconst ToDoList = () => {\n\n    const dispatch = useDispatch();\n    const [isModal, setIsModal] = useState(false);\n    const [chosenToDoIdx, setChosenToDoIdx] = useState(-1);\n    const {filteredTodoLists} = useSelector(state => state.user);\n\n\n    const handleNewTodo = () => {\n        setChosenToDoIdx(-1);\n        setIsModal(true);\n    }\n\n    const handleExistingTodoClick = (idx) =>{\n        setChosenToDoIdx(idx)\n        setIsModal(true);\n    }\n\n\n    useEffect(() => {\n        const loggedInUser = localStorage.getItem('user')\n        const foundUserToken = JSON.parse(loggedInUser).token;\n        dispatch(fetchUserToDoLists({ foundUserToken }));\n      }, []);\n\n  \n    return ( \n        <div className=\"to-do-lists-container\">\n\n             \n            <menu className=\"to-do-lists-menu\">\n            <input placeholder=\"Search\" onChange={(e) => dispatch(searchToDoList(e.target.value))}/>\n\n            <select placeholder=\"Search\" onChange={(e)=> dispatch(sortToDoListsBy(e.target.value))}>\n                <option value={SORT.BY_DATE}>Sort by</option> \n                <option value={SORT.ALPH}>alphabetically</option>\n                <option value={SORT.BY_DONE}>by done tasks</option>\n                <option value={SORT.BY_UNDONE}>by undone tasks</option>\n            </select>\n\n            </menu>\n            \n            \n\n            <ul className=\"to-do-lists\">\n             {filteredTodoLists.map((todo,idx) => {\n\n                const allTasks = todo.task.length\n                const doneTasks = todo.task.filter(task => task.isDone).length\n                const date = parseDate(todo.created_at)\n\n                 return(\n                     <li key={todo.id} onClick={() => handleExistingTodoClick(idx)}>\n                         \n                         <span className=\"to-do-name\">{todo.name}</span>\n\n                         <span className=\"to-do-creation-date\">{`Created at: ${date}`}</span>\n                         \n                         <span className=\"to-do-tasks-status\" >\n                             {`Completed: ${doneTasks} Uncompleted: ${allTasks-doneTasks} All: ${allTasks}`}\n                         </span>\n                        \n                     </li>\n                 )\n                 })}\n\n            <div className=\"add-new-to-do\" onClick={handleNewTodo}>\n                <div className=\"add-new-to-do\"/>\n            </div>\n\n            </ul>\n\n            {isModal && <Modal setIsModal={setIsModal} chosenToDoIdx={chosenToDoIdx}/>}\n\n            \n        </div>\n   \n    );\n}\n \nexport default ToDoList;","export const parseDate = (date) => {\n    const result = date.substr(0,10).split(\"-\")\n    return `${result[2]}-${result[1]}-${result[0]}`\n}","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst ProtectedRoute = ({ children, ...rest }) => {\n\n  const loggedInUser = localStorage.getItem(\"user\");\n  const foundUserToken = JSON.parse(loggedInUser);\n\n    return(\n      <Route {...rest} render={({location}) => {\n        return Boolean(foundUserToken)\n          ? children\n          :  <Redirect to={{ pathname: '/login', state: { from: location } }} />\n        }\n      }\n      />\n    );\n    \n  };\n\nexport default ProtectedRoute","import React from 'react';\n\nconst NotFound = () => {\n\n    return(\n      <div>\n        <p>Not found</p>\n      </div>\n    );\n    \n  };\n\n\n  export default NotFound;","export default __webpack_public_path__ + \"static/media/door.02cf749c.svg\";","export default __webpack_public_path__ + \"static/media/arrow.3c6d235c.svg\";","import \"./styles/App.scss\"\nimport \"./styles/Form.scss\"\nimport React, { useEffect } from 'react';\nimport Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\nimport ToDoList from \"./pages/ToDoList\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"\nimport NotFound from \"./pages/NotFound\"\nimport { setPreviouslyLoggedUser, cleanWholeState } from \"./redux/slices/UserSlice\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport doorIcon from \"./assets/door.svg\"\nimport rightArrowIcon from \"./assets/arrow.svg\"\n\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const { isLogged } = useSelector(state => state.user);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    dispatch(cleanWholeState());\n  }\n  \n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      dispatch(setPreviouslyLoggedUser(user))\n    }\n  },[])\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n\n          <div className=\"app-name\">\n            <h1>ToDo-List</h1>\n          </div>\n          \n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register}/>\n          <ProtectedRoute exact path=\"/\"> <ToDoList/> </ProtectedRoute>\n          <Route component={NotFound} />\n        </Switch>\n\n        {isLogged &&\n            <div className=\"logout-button\" onClick={handleLogout}>\n              <img className=\"door-icon\" src={doorIcon} alt=\"door-icon\" />\n              <img className=\"right-arrow-icon\" src={rightArrowIcon} alt=\"right-arrow-icon\" />\n            </div>\n        }\n\n\n      </div>\n    </Router>\n  );\n}\n\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from \"./slices/UserSlice\"\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer\n  }\n})\n\nexport default store\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\"\n\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}